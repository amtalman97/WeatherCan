# load package
library("weathercan")
#
#
# =============================================================================
# ==== General ================================================================
# =============================================================================
#
# the main.R file is at the centre of my projects. Start here!
# 1) which libraries are needed
# 2) make folder structure and create paths to folders
# 3) define 'global' variables; variables used throughout the code
# 4) run R scripts with e.g. custum functions functions
#
#
# typically start with the version of R it works on
#
R.version.string
#  "R version 3.5.1 (2018-07-02)"
# this can be expanded by using
# sessionInfo()
# *****************************************************************************
# NOTES
# â€¢
#
#
# good coding does not go beyond 80 characters on a line... (not me!)
# https://google-styleguide.googlecode.com/svn/trunk/Rguide.xml
# Set this in RStudio
#Tools -> Global Options -> Code -> Display
# [ ] Show margin
# Margin column [80]
# *****************************************************************************
# I like to set the working dir so I can always retrace where files should be
# in case the code fails
working.dir <- getwd()
# =============================================================================
# ==== 1) libraries ===========================================================
# =============================================================================
# libraries contain specific functions and they come in many shapaes an forms
# library("name of package")
# if you don't have the library yet, install it! Either through the 'Tools' menu
# or install.packages("name of package")
# install package
install.packages("weathercan")
# load package
library("weathercan")
# =============================================================================
# === 2) folder management ====================================================
# =============================================================================
# names of folders for output data (figures,data output,data)
# store names of the folders in an object
output.folder.names <- c("figures", "data.output", "data")
# and make the folders if they don't exit yet. No need to understand this now
for(i in 1:length(output.folder.names))
if(file.exists(output.folder.names[i]) == FALSE)
dir.create(output.folder.names[i])
# you need to store in an object the file path to these folders so we can
# read from them and write to them.
# again no need to understand the code
path.figures <- paste(working.dir, "/", output.folder.names[1], "/", sep = "")
path.data.output <- paste(working.dir, "/", output.folder.names[2], "/",
sep = "")
path.data <- paste(working.dir, "/", output.folder.names[3], "/", sep = "")
# test saving file to output folder
write.csv(output.folder.names, paste(path.data.output, "uselessnames.csv"),
row.names = FALSE)
# =============================================================================
# === 3) global variables =====================================================
# =============================================================================
# define variables here that you will use throughout the code
# for example, number of iteratons of a permutation, colours used, etc
# =============================================================================
# === 4) run custom code ======================================================
# =============================================================================
# if you have custum R scripts with e.g. functions for data manipulations
# or to make figures, run this here so they are in the working memory
# example to run R script called figures
# source("figures.R")
# ==== end of main =============================================================
install.packages("weathercan")
st.t1 <- stations_search("Squamish", interval = "day") # 336
head(st.t1)
stations_search("Squamish", interval = "day") # 336
# load package
library("weathercan")
# ---- A obtain data from multiple stations -----
# find a station
st.t1 <- stations_search("Squamish", interval = "day") # 336
head(st.t1)
w.Squam <- weather_dl(station_ids = 336, start = "2017-11-01",
end = "2018-04-30", interval = "day")
str(w.Squam)
path.data
# send to data folder
write.csv(w.Squam, paste(path.data,'Squamish.csv', sep = "")
# send to data folder
write.csv(w.Squam, paste(path.data,'Squamish.csv', sep = ""))
str(w.Squam)
?write.csv
paste(path.data,'Squamish.csv', sep = "")
# send to data folder
write.csv(w.Squam, paste(path.data,'Squamish.csv', sep = ""))
w.Pem <- weather_dl(station_ids = 536, start = "2017-11-01",
end = "2018-04-30", interval = "day")
str(w.Pem)
# send to data folder
write.csv(w.Pem, paste(path.data,'Pemberton.csv', sep = ""))
# ---- B visualise data ------------------------------------
plot(w.Squam$max_temp, w.Pem$max_temp, pch = 19, cex = 0.2)
# ---- B visualise data ------------------------------------
str(w.Squam)
plot(w.Squam$date, w.Squam$max_temp)
plot(w.Squam$date, w.Squam$max_temp, pch= 19, col = "red", las = 1)
col.t <- c("#FF0000", "#A0A0A0")   # hexadecimal colour code for red and lime
alpha <- 90                        # sets the transparancy
col.trans <- paste(col.t, alpha)
plot(w.Squam$date, w.Squam$max_temp, pch= 19, col = col.trans[1], las = 1)
col.trans[1]
col.trans <- paste(col.t, alpha, sep = "")
plot(w.Squam$date, w.Squam$max_temp, pch= 19, col = col.trans[1], las = 1)
plot(w.Squam$date, w.Squam$max_temp, pch= 19, col = col.trans[1], las = 1,
ylab = "max temperature (Celsius)", xalb = "date")
plot(w.Squam$date, w.Squam$max_temp, pch= 19, col = col.trans[1], las = 1,
ylab = "max temperature (Celsius)", xlab = "date")
pdf(paste(path.figures, "max.temp.Squamish.pdf", sep = ""), width = 7,
height = 5)
plot(w.Squam$date, w.Squam$max_temp, pch= 19, col = col.trans[1], las = 1,
ylab = "max temperature (Celsius)", xlab = "date")
dev.off()
plot(w.Pem$date, w.Pem$max_temp, pch= 19, col = col.trans[1], las = 1,
ylab = "max temperature (Celsius)", xlab = "date")
pdf(paste(path.figures, "max.temp.Pemberton.pdf", sep = ""), width = 7,
height = 5)
plot(w.Pem$date, w.Pem$max_temp, pch= 19, col = col.trans[1], las = 1,
ylab = "max temperature (Celsius)", xlab = "date")
dev.off()
# ---- C correlation between stations ------------------------------------
# look at the correlation between Squamish and Pemberton
plot(w.Squam$max_temp, w.Pem$max_temp, pch = 19, cex = 0.2)
plot(w.Squam$max_temp, w.Pem$max_temp, pch= 19, col = col.trans[1], las = 1,
ylab = "Pemberton temperature (C)", xlab = "Squamish temperature (C)"))
# ---- C correlation between stations ------------------------------------
# look at the correlation between Squamish and Pemberton
plot(w.Squam$max_temp, w.Pem$max_temp, pch= 19, col = col.trans[1], las = 1,
ylab = "Pemberton temperature (C)", xlab = "Squamish temperature (C)")
pdf(paste(path.figures, "correlation.temp.pdf", sep = ""), width = 5,
height = 5)
plot(w.Squam$max_temp, w.Pem$max_temp, pch= 19, col = col.trans[1], las = 1,
ylab = "Pemberton temperature (C)", xlab = "Squamish temperature (C)")
dev.off()
# let's calculate the correlation coefficient
cor(w.Pem$max_temp, w.Squam$max_temp)
cor(w.Pem$max_temp, w.Squam$max_temp)
is.na(w.Pem$max_temp)
# throws and errors. Check NA's
length(is.na(w.Pem$max_temp))
# throws and errors. Check NA's
length(is.na(w.Pem$max_temp) == TRUE)
length(w.Pem$max_temp)
cor(w.Pem$max_temp, w.Squam$max_temp)
which(is.na(w.Squam$max_temp))
missing.combined <- unique(c(na.S, na.P))
na.S <- which(is.na(w.Squam$max_temp))
na.P <- which(is.na(w.Pem$max_temp))
w.Squam$max_temp[29]
missing.combined <- unique(c(na.S, na.P))
missing.combined
# delete the rows with missing values from both data sets
w.Squam.t <- w.Squam[-missing.combined,]
which(is.na(w.Squam.t$max_temp))
w.Pem.t <- Pem.t[-missing.combined,]
w.Pem.t <- w.Pem[-missing.combined,]
which(is.na(w.Pem.t$max_temp))
# redo the correlation
cor(w.Pem.t$max_temp, w.Squam.t$max_temp)
# redo the correlation
model.corr.temp <- cor(w.Pem.t$max_temp, w.Squam.t$max_temp)
summary(model.corr.temp)
# the mean
model.corr.temp[4]
# the mean
model.corr.temp[1]
# the mean
model.corr.temp
# the mean
str(model.corr.temp)
# let's save it to the output
str(model.corr.temp)
# let's save it to the output
write.csv(model.corr.temp, paste(path.data.output, "corr.coeff.csv", sep = ""))
abline(model.corr.temp)
plot(w.Squam$max_temp, w.Pem$max_temp, pch= 19, col = col.trans[2], las = 1,
ylab = "Pemberton temperature (C)", xlab = "Squamish temperature (C)")
# colours
col.t <- c("#FF0000", "#80FF00")   # hexadecimal colour code for red and lime
alpha <- 90                        # sets the transparancy
col.trans <- paste(col.t, alpha, sep = "")
plot(w.Squam$max_temp, w.Pem$max_temp, pch= 19, col = col.trans[2], las = 1,
ylab = "Pemberton temperature (C)", xlab = "Squamish temperature (C)")
lines(c(0, max(w.Squam$max_temp)), c(0, model.corr.temp * max(w.Squam$max_temp)))
c(0, max(w.Squam$max_temp))
lines(c(0, max(w.Squam.t$max_temp)),
c(0, model.corr.temp * max(w.Squam.t$max_temp)))
plot(w.Squam$max_temp, w.Pem$max_temp, pch= 19, col = col.trans[2], las = 1,
ylab = "Pemberton temperature (C)", xlab = "Squamish temperature (C)")
ablines(cor(w.Pem.t$max_temp, w.Squam.t$max_temp))
abline(cor(w.Pem.t$max_temp, w.Squam.t$max_temp))
# get start and end points
x.range <- c(min(w.Squam.t$max_temp), max(w.Squam.t$max_temp))
x.range
x.range <- c(min(w.Squam.t$max_temp), max(w.Squam.t$max_temp))
y.range <- c(min(w.Squam.t$max_temp)*model.corr.temp,
max(w.Squam.t$max_temp) * model.corr.temp)
lines(x.range, y.range)
cor(w.Squam.t$max_temp, w.Pem.t$max_temp)
model.corr.temp
pdf(paste(path.figures, "correlation.temp.pdf", sep = ""), width = 5,
height = 5)
plot(w.Squam$max_temp, w.Pem$max_temp, pch= 19, col = col.trans[2], las = 1,
ylab = "Pemberton temperature (C)", xlab = "Squamish temperature (C)")
dev.off()
pdf(paste(path.figures, "correlation.temp.pdf", sep = ""), width = 5,
height = 5)
plot(w.Squam$max_temp, w.Pem$max_temp, pch= 19, col = col.trans[2], las = 1,
ylab = "Pemberton temperature (C)", xlab = "Squamish temperature (C)")
dev.off()
plot(w.Squam$max_temp, w.Pem$max_temp, pch= 19, col = col.trans[2], las = 1,
ylab = "Pemberton temperature (C)", xlab = "Squamish temperature (C)")
col.t <- c("#FF0000", "#80FF00")   # hexadecimal colour code for red and lime
alpha <- 90
col.trans <- paste(col.t, alpha, sep = "")
col.trans
st.t1 <- stations_search("Squamish", interval = "day") # 336
head(st.t1)
str(w.Squam)
path.data
# send to data folder
write.csv(w.Squam, paste(path.data,'Squamish.csv', sep = ""))
# send to data folder
write.csv(w.Squam, paste(path.data,'Squamish.csv', sep = ""))
plot(w.Squam$date, w.Squam$max_temp, pch= 19, col = col.trans[1], las = 1,
ylab = "max temperature (Celsius)", xlab = "date")
plot(w.Squam$date, w.Squam$max_temp, pch= 19, col = col.trans[1], las = 1,
ylab = "max temperature (Celsius)", xlab = "date")
pdf(paste(path.figures, "max.temp.Squamish.pdf", sep = ""), width = 7,
height = 5)
plot(w.Squam$date, w.Squam$max_temp, pch= 19, col = col.trans[1], las = 1,
ylab = "max temperature (Celsius)", xlab = "date")
dev.off()
path.figures
list.files(path.figures)
pdf(paste(path.figures, "max.temp.SquamishBIG.pdf", sep = ""), width = 14,
height = 10)
plot(w.Squam$date, w.Squam$max_temp, pch= 19, col = col.trans[1], las = 1,
ylab = "max temperature (Celsius)", xlab = "date")
dev.off()
# let's calculate the correlation coefficient
cor(w.Pem$max_temp, w.Squam$max_temp)
is.na(w.Squam$max_temp)
which(is.na(w.Squam$max_temp))
na.P <- which(is.na(w.Pem$max_temp))
na.P
na.S
w.Squam$max_temp[29]# quick check
# which ones are missing?
missing.combined <- unique(c(na.S, na.P))
# which ones are missing?
missing.combined <- unique(c(na.S, na.P))
missing.combined
which(is.na(w.Squam.t$max_temp)) # indeed, no more missing values
which(is.na(w.Pem.t$max_temp))  # indeed, no more missing values
cor(w.Pem.t$max_temp, w.Squam.t$max_temp)
# redo the correlation
model.corr.temp <- cor(w.Pem.t$max_temp, w.Squam.t$max_temp)
model.corr.temp
summary(model.corr.temp)
model.corr.temp
# let's save it to the output
write.csv(model.corr.temp, paste(path.data.output, "corr.coeff.WOW.csv", sep = ""))
names(model.corr.temp) <- "corr.coef"
model.corr.temp
# let's save it to the output
write.csv(model.corr.temp, paste(path.data.output, "corr.coeff.WOWwer.csv",
sep = ""), row.names = FALSE)
# let's save it to the output
write.csv(model.corr.temp, paste(path.data.output, "corr.coeff.WOWwer.csv",
sep = ""), row.names = FALSE, col.names = TRUE)
colnames(model.corr.temp) <- "corr.coef"
# let's save it to the output
write.csv(model.corr.temp, paste(path.data.output, "corr.coeff.WOWwer.csv",
sep = ""), row.names = FALSE, col.names = "corr")
